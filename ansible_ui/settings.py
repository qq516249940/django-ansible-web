"""
Django settings for ansible_ui project.
Generated by 'django-admin startproject' using Django 2.2.1.
"""

import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
SECRET_KEY = '@^^2s2_gw@$x(x8ooctybo5-m%tnmx^&1$46!gz+o-yz067k!b'

from tools.config import MYSQL_HOST, MYSQL_PASS, MYSQL_PORT, MYSQL_USER, web_debug, USE_MYSQL

DEBUG = web_debug
ALLOWED_HOSTS = ["*"]
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'channels',
    'public',
    'rest_framework',
    'rest_framework_swagger',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'tools.middlewares.RecordRequest',
]

ROOT_URLCONF = 'ansible_ui.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# ASGI_APPLICATION = "ansible_ui.routing.application"
WSGI_APPLICATION = 'ansible_ui.wsgi.application'

if USE_MYSQL:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            # 'NAME': 'AnsibleUI',
            'NAME': 'ansible_ui',
            'USER': MYSQL_USER,
            'PASSWORD': MYSQL_PASS,
            'HOST': MYSQL_HOST,
            'PORT': MYSQL_PORT,
            'OPTIONS': {'charset': 'utf8mb4'},
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': 'tmp/django_cache',
    }
}

# LOGDIR = os.path.join(BASE_DIR, "ansible_ui")
LOGDIR = os.path.join(BASE_DIR, "logs")
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {'format': '%(asctime)s %(levelname)s %(funcName)s %(pathname)s:%(lineno)s %(message)s'},
        'custom': {'format': '%(asctime)s %(levelname)s %(module)s %(funcName)s %(pathname)s:%(lineno)s %(message)s'},
        'simple': {'format': '%(asctime)s %(levelname)s %(module)s %(message)s'},
        'basic': {'format': '%(asctime)s %(levelname)s %(message)s'}
    },
    'filters': {},
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'logs/django-debug.log',
            'formatter': 'verbose',
        },
        'file-db': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'logs/django-db.log',
            'formatter': 'verbose'
        },
        'file-request': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'logs/django-request.log',
            'formatter': 'verbose'
        },
        'file-server': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'logs/django-server.log',
            'formatter': 'basic'
        },
        'file-ui': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'logs/django-ui.log',
            'formatter': 'verbose'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': False,
            'formatter': 'verbose'
        },
        'django.request': {
            'handlers': ['file-request'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'django.server': {
            'handlers': ['file-server'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'django.db.backends': {
            'handlers': ['file-db'],
            'level': 'DEBUG',
            'propagate': False,
            'formatter': 'verbose'
        },
        'ansible.ui': {
            'handlers': ['file-ui'],
            'level': 'DEBUG',
            'propagate': False,
            'formatter': 'verbose'
        },
    },
}

from django.utils.translation import gettext_lazy as _

LANGUAGES = [
    ('zh-Hans', _('Chinese')),
]
LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'
USE_I18N = True
USE_L10N = True
USE_TZ = True

STATIC_URL = '/static/'
# STATIC_ROOT = 'static'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)

LOGIN_URL = '/account/login'


REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        # 'rest_framework.permissions.IsAdminUser',
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.AutoSchema',
    # 'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
}
